<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-4FG52A2" failures="0" tests="9" name="Default test" time="0.85" errors="0" timestamp="2023-03-28T12:40:56 CEST">
  <testcase classname="etherscandemo.main" name="@BeforeMethod beforeMethod" time="0.721">
    <failure type="java.lang.ExceptionInInitializerError">
      <![CDATA[java.lang.ExceptionInInitializerError
at org.openqa.selenium.remote.HttpCommandExecutor.getDefaultClientFactory(HttpCommandExecutor.java:62)
at org.openqa.selenium.remote.HttpCommandExecutor.<init>(HttpCommandExecutor.java:87)
at org.openqa.selenium.remote.service.DriverCommandExecutor.<init>(DriverCommandExecutor.java:80)
at org.openqa.selenium.chromium.ChromiumDriverCommandExecutor.<init>(ChromiumDriverCommandExecutor.java:35)
at org.openqa.selenium.chrome.ChromeDriver$ChromeDriverCommandExecutor.<init>(ChromeDriver.java:94)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:82)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:71)
at etherscandemo.main.beforeMethod(main.java:105)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.IllegalArgumentException: Unknown HttpClient factory jdk-http-client
at org.openqa.selenium.remote.http.HttpClient$Factory.create(HttpClient.java:57)
at org.openqa.selenium.remote.http.HttpClient$Factory.createDefault(HttpClient.java:73)
at org.openqa.selenium.remote.HttpCommandExecutor$DefaultClientFactoryHolder.<clinit>(HttpCommandExecutor.java:58)
... 38 more
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="etherscandemo.main" name="@AfterMethod afterMethod" time="-1.680000056195E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="etherscandemo.main" name="@BeforeMethod beforeMethod" time="-1.680000056198E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="etherscandemo.main" name="@AfterMethod afterMethod" time="-1.680000056203E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="etherscandemo.main" name="@BeforeMethod beforeMethod" time="-1.680000056204E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="etherscandemo.main" name="@AfterMethod afterMethod" time="-1.680000056209E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="etherscandemo.main" name="@BeforeMethod beforeMethod" time="-1.68000005621E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="etherscandemo.main" name="@AfterMethod afterMethod" time="-1.680000056215E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="etherscandemo.main" name="@BeforeMethod beforeMethod" time="-1.680000056216E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="etherscandemo.main" name="@AfterMethod afterMethod" time="-1.68000005622E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="etherscandemo.main" name="@BeforeMethod beforeMethod" time="-1.680000056221E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="etherscandemo.main" name="@AfterMethod afterMethod" time="-1.680000056225E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="etherscandemo.main" name="@BeforeMethod beforeMethod" time="-1.680000056227E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="etherscandemo.main" name="@AfterMethod afterMethod" time="-1.680000056232E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="etherscandemo.main" name="@BeforeMethod beforeMethod" time="-1.680000056234E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="etherscandemo.main" name="@AfterMethod afterMethod" time="-1.680000056238E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="etherscandemo.main" name="@BeforeMethod beforeMethod" time="-1.680000056241E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="etherscandemo.main" name="@AfterMethod afterMethod" time="-1.680000056246E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="etherscandemo.main" name="captchaTest" time="0.0">
    <skipped/>
  </testcase> <!-- captchaTest -->
  <testcase classname="etherscandemo.main" name="emptyClick" time="0.0">
    <skipped/>
  </testcase> <!-- emptyClick -->
  <testcase classname="etherscandemo.main" name="fullLoginWithoutCaptcha" time="0.0">
    <skipped/>
  </testcase> <!-- fullLoginWithoutCaptcha -->
  <testcase classname="etherscandemo.main" name="invalidEmail" time="0.0">
    <skipped/>
  </testcase> <!-- invalidEmail -->
  <testcase classname="etherscandemo.main" name="invalidEmailWithConfirmation" time="0.0">
    <skipped/>
  </testcase> <!-- invalidEmailWithConfirmation -->
  <testcase classname="etherscandemo.main" name="nonAlphanumericUsername" time="0.0">
    <skipped/>
  </testcase> <!-- nonAlphanumericUsername -->
  <testcase classname="etherscandemo.main" name="shortUsername" time="0.0">
    <skipped/>
  </testcase> <!-- shortUsername -->
  <testcase classname="etherscandemo.main" name="validEmail" time="0.0">
    <skipped/>
  </testcase> <!-- validEmail -->
  <testcase classname="etherscandemo.main" name="validUsername" time="0.0">
    <skipped/>
  </testcase> <!-- validUsername -->
</testsuite> <!-- Default test -->
